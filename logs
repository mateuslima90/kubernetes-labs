{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": [
        {
            "metadata": {
                "name": "mkth-k8s-control-plane",
                "uid": "697367c3-cc99-459e-bd96-379a3b2768e1",
                "resourceVersion": "575178",
                "creationTimestamp": "2021-08-18T01:07:22Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "mkth-k8s-control-plane",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": "",
                    "node-role.kubernetes.io/master": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ],
                "providerID": "kind://docker/mkth-k8s/mkth-k8s-control-plane",
                "taints": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "8",
                    "ephemeral-storage": "244568380Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "16266816Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "8",
                    "ephemeral-storage": "244568380Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "16266816Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:55:54Z",
                        "lastTransitionTime": "2021-08-18T01:07:19Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:55:54Z",
                        "lastTransitionTime": "2021-08-18T01:07:19Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:55:54Z",
                        "lastTransitionTime": "2021-08-18T01:07:19Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2021-08-28T19:55:54Z",
                        "lastTransitionTime": "2021-08-18T01:07:46Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.2"
                    },
                    {
                        "type": "Hostname",
                        "address": "mkth-k8s-control-plane"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "5862b5a8610a4208942a24242bfb0970",
                    "systemUUID": "0814c47a-92f7-4ddd-85b2-0f0192fb2dce",
                    "bootID": "e8cdb4f3-a05f-45d1-ba1f-8e030b4c2df0",
                    "kernelVersion": "5.8.0-63-generic",
                    "osImage": "Ubuntu 21.04",
                    "containerRuntimeVersion": "containerd://1.5.2",
                    "kubeletVersion": "v1.21.1",
                    "kubeProxyVersion": "v1.21.1",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "k8s.gcr.io/kube-proxy:v1.21.1"
                        ],
                        "sizeBytes": 132714699
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-apiserver:v1.21.1"
                        ],
                        "sizeBytes": 126834637
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-controller-manager:v1.21.1"
                        ],
                        "sizeBytes": 121042741
                    },
                    {
                        "names": [
                            "k8s.gcr.io/etcd:3.4.13-0"
                        ],
                        "sizeBytes": 86742272
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20210326-1e038dc5"
                        ],
                        "sizeBytes": 53960776
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-scheduler:v1.21.1"
                        ],
                        "sizeBytes": 51865396
                    },
                    {
                        "names": [
                            "k8s.gcr.io/build-image/debian-base:v2.1.0"
                        ],
                        "sizeBytes": 21086532
                    },
                    {
                        "names": [
                            "docker.io/rancher/local-path-provisioner:v0.0.14"
                        ],
                        "sizeBytes": 13367922
                    },
                    {
                        "names": [
                            "k8s.gcr.io/coredns/coredns:v1.8.0"
                        ],
                        "sizeBytes": 12945155
                    },
                    {
                        "names": [
                            "k8s.gcr.io/pause:3.5"
                        ],
                        "sizeBytes": 301416
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "mkth-k8s-worker",
                "uid": "304337e9-1203-4500-9080-3dfb1a7c78bd",
                "resourceVersion": "575073",
                "creationTimestamp": "2021-08-18T01:07:51Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "mkth-k8s-worker",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.3.0/24",
                "podCIDRs": [
                    "10.244.3.0/24"
                ],
                "providerID": "kind://docker/mkth-k8s/mkth-k8s-worker"
            },
            "status": {
                "capacity": {
                    "cpu": "8",
                    "ephemeral-storage": "244568380Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "16266816Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "8",
                    "ephemeral-storage": "244568380Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "16266816Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:53:09Z",
                        "lastTransitionTime": "2021-08-18T01:07:51Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:53:09Z",
                        "lastTransitionTime": "2021-08-18T01:07:51Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:53:09Z",
                        "lastTransitionTime": "2021-08-18T01:07:51Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2021-08-28T19:53:09Z",
                        "lastTransitionTime": "2021-08-18T01:08:01Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.5"
                    },
                    {
                        "type": "Hostname",
                        "address": "mkth-k8s-worker"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "ff121954c2654510a376a92f65c03f91",
                    "systemUUID": "ef73b119-9d06-4b38-84a5-bedc536651ec",
                    "bootID": "e8cdb4f3-a05f-45d1-ba1f-8e030b4c2df0",
                    "kernelVersion": "5.8.0-63-generic",
                    "osImage": "Ubuntu 21.04",
                    "containerRuntimeVersion": "containerd://1.5.2",
                    "kubeletVersion": "v1.21.1",
                    "kubeProxyVersion": "v1.21.1",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:99d19e4531bacb8023b004eda5a1867b1f292f07ec156655df6dbd0730b3bb0a",
                            "docker.io/makingthehand/hello-go:v5.2"
                        ],
                        "sizeBytes": 317374904
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:519ac3ec4b6f6c5a9fd8a0492c2933b32bc3cae1854bb99e7da6a8ed023fcaac",
                            "docker.io/makingthehand/hello-go:v5"
                        ],
                        "sizeBytes": 317374875
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:a63e3674ea4c15d866928e9d62479306cc711c31b97a06f77f06bef2f78dde8f",
                            "docker.io/makingthehand/hello-go:v5.1"
                        ],
                        "sizeBytes": 317374801
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:665f1f1389f51d8ae3d14e56eaaf0a764154128fad88cc76f57589596098a10e",
                            "docker.io/makingthehand/hello-go:v3.2"
                        ],
                        "sizeBytes": 317371421
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:eacc6520f7146bac44c9ed139207d55a43698076a590501c1be89aa32edbc153",
                            "docker.io/makingthehand/hello-go:v3"
                        ],
                        "sizeBytes": 317371015
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:279301e2a93a808f00dcfa51e2ed77498a9b705dc35dad6e73ca5cacd57dd0a7",
                            "docker.io/makingthehand/hello-go:v2"
                        ],
                        "sizeBytes": 317368125
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-proxy:v1.21.1"
                        ],
                        "sizeBytes": 132714699
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-apiserver:v1.21.1"
                        ],
                        "sizeBytes": 126834637
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-controller-manager:v1.21.1"
                        ],
                        "sizeBytes": 121042741
                    },
                    {
                        "names": [
                            "k8s.gcr.io/etcd:3.4.13-0"
                        ],
                        "sizeBytes": 86742272
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20210326-1e038dc5"
                        ],
                        "sizeBytes": 53960776
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-scheduler:v1.21.1"
                        ],
                        "sizeBytes": 51865396
                    },
                    {
                        "names": [
                            "k8s.gcr.io/build-image/debian-base:v2.1.0"
                        ],
                        "sizeBytes": 21086532
                    },
                    {
                        "names": [
                            "docker.io/rancher/local-path-provisioner:v0.0.14"
                        ],
                        "sizeBytes": 13367922
                    },
                    {
                        "names": [
                            "k8s.gcr.io/coredns/coredns:v1.8.0"
                        ],
                        "sizeBytes": 12945155
                    },
                    {
                        "names": [
                            "k8s.gcr.io/pause:3.5"
                        ],
                        "sizeBytes": 301416
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "mkth-k8s-worker2",
                "uid": "68b48ccc-5c0a-4e2a-945c-a8a89b3cf13a",
                "resourceVersion": "575277",
                "creationTimestamp": "2021-08-18T01:07:51Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "mkth-k8s-worker2",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.1.0/24",
                "podCIDRs": [
                    "10.244.1.0/24"
                ],
                "providerID": "kind://docker/mkth-k8s/mkth-k8s-worker2"
            },
            "status": {
                "capacity": {
                    "cpu": "8",
                    "ephemeral-storage": "244568380Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "16266816Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "8",
                    "ephemeral-storage": "244568380Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "16266816Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:56:12Z",
                        "lastTransitionTime": "2021-08-18T17:22:43Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:56:12Z",
                        "lastTransitionTime": "2021-08-18T17:22:43Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:56:12Z",
                        "lastTransitionTime": "2021-08-18T17:22:43Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2021-08-28T19:56:12Z",
                        "lastTransitionTime": "2021-08-18T17:22:43Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.4"
                    },
                    {
                        "type": "Hostname",
                        "address": "mkth-k8s-worker2"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "eceaef9aa432498fa7e1bad383915cd7",
                    "systemUUID": "a7a41af5-69b8-4f5c-b946-1f934ef94870",
                    "bootID": "e8cdb4f3-a05f-45d1-ba1f-8e030b4c2df0",
                    "kernelVersion": "5.8.0-63-generic",
                    "osImage": "Ubuntu 21.04",
                    "containerRuntimeVersion": "containerd://1.5.2",
                    "kubeletVersion": "v1.21.1",
                    "kubeProxyVersion": "v1.21.1",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:99d19e4531bacb8023b004eda5a1867b1f292f07ec156655df6dbd0730b3bb0a",
                            "docker.io/makingthehand/hello-go:v5.2"
                        ],
                        "sizeBytes": 317374904
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:519ac3ec4b6f6c5a9fd8a0492c2933b32bc3cae1854bb99e7da6a8ed023fcaac",
                            "docker.io/makingthehand/hello-go:v5"
                        ],
                        "sizeBytes": 317374875
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:a63e3674ea4c15d866928e9d62479306cc711c31b97a06f77f06bef2f78dde8f",
                            "docker.io/makingthehand/hello-go:v5.1"
                        ],
                        "sizeBytes": 317374801
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:ee951d5c6d1744d2a407029d93723b8cba7473dc62b05434204b3b7dd9e08a95",
                            "docker.io/makingthehand/hello-go:v4"
                        ],
                        "sizeBytes": 317372445
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:eacc6520f7146bac44c9ed139207d55a43698076a590501c1be89aa32edbc153",
                            "docker.io/makingthehand/hello-go:v3",
                            "docker.io/makingthehand/hello-go:v3.1"
                        ],
                        "sizeBytes": 317371015
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:279301e2a93a808f00dcfa51e2ed77498a9b705dc35dad6e73ca5cacd57dd0a7",
                            "docker.io/makingthehand/hello-go:v2"
                        ],
                        "sizeBytes": 317368125
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-proxy:v1.21.1"
                        ],
                        "sizeBytes": 132714699
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-apiserver:v1.21.1"
                        ],
                        "sizeBytes": 126834637
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-controller-manager:v1.21.1"
                        ],
                        "sizeBytes": 121042741
                    },
                    {
                        "names": [
                            "k8s.gcr.io/etcd:3.4.13-0"
                        ],
                        "sizeBytes": 86742272
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20210326-1e038dc5"
                        ],
                        "sizeBytes": 53960776
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-scheduler:v1.21.1"
                        ],
                        "sizeBytes": 51865396
                    },
                    {
                        "names": [
                            "k8s.gcr.io/build-image/debian-base:v2.1.0"
                        ],
                        "sizeBytes": 21086532
                    },
                    {
                        "names": [
                            "docker.io/rancher/local-path-provisioner:v0.0.14"
                        ],
                        "sizeBytes": 13367922
                    },
                    {
                        "names": [
                            "k8s.gcr.io/coredns/coredns:v1.8.0"
                        ],
                        "sizeBytes": 12945155
                    },
                    {
                        "names": [
                            "k8s.gcr.io/pause:3.5"
                        ],
                        "sizeBytes": 301416
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "mkth-k8s-worker3",
                "uid": "137c8e14-ffe4-4e36-a7c2-03e618223dc3",
                "resourceVersion": "575107",
                "creationTimestamp": "2021-08-18T01:07:51Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "mkth-k8s-worker3",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.2.0/24",
                "podCIDRs": [
                    "10.244.2.0/24"
                ],
                "providerID": "kind://docker/mkth-k8s/mkth-k8s-worker3"
            },
            "status": {
                "capacity": {
                    "cpu": "8",
                    "ephemeral-storage": "244568380Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "16266816Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "8",
                    "ephemeral-storage": "244568380Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "16266816Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:53:42Z",
                        "lastTransitionTime": "2021-08-18T01:07:51Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:53:42Z",
                        "lastTransitionTime": "2021-08-18T01:07:51Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-08-28T19:53:42Z",
                        "lastTransitionTime": "2021-08-18T01:07:51Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2021-08-28T19:53:42Z",
                        "lastTransitionTime": "2021-08-18T01:08:01Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.4"
                    },
                    {
                        "type": "Hostname",
                        "address": "mkth-k8s-worker3"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "b7ef4a70a8ee4e54a639362ac3909eb1",
                    "systemUUID": "e056f7c2-ad56-4dd0-9f06-63b8279ccbd6",
                    "bootID": "e8cdb4f3-a05f-45d1-ba1f-8e030b4c2df0",
                    "kernelVersion": "5.8.0-63-generic",
                    "osImage": "Ubuntu 21.04",
                    "containerRuntimeVersion": "containerd://1.5.2",
                    "kubeletVersion": "v1.21.1",
                    "kubeProxyVersion": "v1.21.1",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:99d19e4531bacb8023b004eda5a1867b1f292f07ec156655df6dbd0730b3bb0a",
                            "docker.io/makingthehand/hello-go:v5.2"
                        ],
                        "sizeBytes": 317374904
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:519ac3ec4b6f6c5a9fd8a0492c2933b32bc3cae1854bb99e7da6a8ed023fcaac",
                            "docker.io/makingthehand/hello-go:v5"
                        ],
                        "sizeBytes": 317374875
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:a63e3674ea4c15d866928e9d62479306cc711c31b97a06f77f06bef2f78dde8f",
                            "docker.io/makingthehand/hello-go:v5.1"
                        ],
                        "sizeBytes": 317374801
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:ee951d5c6d1744d2a407029d93723b8cba7473dc62b05434204b3b7dd9e08a95",
                            "docker.io/makingthehand/hello-go:v4"
                        ],
                        "sizeBytes": 317372445
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:665f1f1389f51d8ae3d14e56eaaf0a764154128fad88cc76f57589596098a10e",
                            "docker.io/makingthehand/hello-go:v3.2"
                        ],
                        "sizeBytes": 317371421
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:eacc6520f7146bac44c9ed139207d55a43698076a590501c1be89aa32edbc153",
                            "docker.io/makingthehand/hello-go:v3",
                            "docker.io/makingthehand/hello-go:v3.1"
                        ],
                        "sizeBytes": 317371015
                    },
                    {
                        "names": [
                            "docker.io/makingthehand/hello-go@sha256:279301e2a93a808f00dcfa51e2ed77498a9b705dc35dad6e73ca5cacd57dd0a7",
                            "docker.io/makingthehand/hello-go:v2"
                        ],
                        "sizeBytes": 317368125
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-proxy:v1.21.1"
                        ],
                        "sizeBytes": 132714699
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-apiserver:v1.21.1"
                        ],
                        "sizeBytes": 126834637
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-controller-manager:v1.21.1"
                        ],
                        "sizeBytes": 121042741
                    },
                    {
                        "names": [
                            "k8s.gcr.io/etcd:3.4.13-0"
                        ],
                        "sizeBytes": 86742272
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20210326-1e038dc5"
                        ],
                        "sizeBytes": 53960776
                    },
                    {
                        "names": [
                            "k8s.gcr.io/kube-scheduler:v1.21.1"
                        ],
                        "sizeBytes": 51865396
                    },
                    {
                        "names": [
                            "k8s.gcr.io/build-image/debian-base:v2.1.0"
                        ],
                        "sizeBytes": 21086532
                    },
                    {
                        "names": [
                            "docker.io/rancher/local-path-provisioner:v0.0.14"
                        ],
                        "sizeBytes": 13367922
                    },
                    {
                        "names": [
                            "k8s.gcr.io/coredns/coredns:v1.8.0"
                        ],
                        "sizeBytes": 12945155
                    },
                    {
                        "names": [
                            "k8s.gcr.io/pause:3.5"
                        ],
                        "sizeBytes": 301416
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-558bd4d5db-pgrb2.169f9095aed5c718",
                "namespace": "kube-system",
                "uid": "ca912b49-a3e6-4ee7-9900-1eef7181d5f8",
                "resourceVersion": "575240",
                "creationTimestamp": "2021-08-28T19:56:05Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-558bd4d5db-pgrb2",
                "uid": "15fe3491-fa04-4a91-8ed6-aa451edf4d4d",
                "apiVersion": "v1",
                "resourceVersion": "481160"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:02Z",
            "lastTimestamp": "2021-08-28T19:56:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-558bd4d5db-pgrb2.169f9095c64c309b",
                "namespace": "kube-system",
                "uid": "1ba31027-e0bd-4819-bf38-bf1124e2cf0e",
                "resourceVersion": "575247",
                "creationTimestamp": "2021-08-28T19:56:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-558bd4d5db-pgrb2",
                "uid": "15fe3491-fa04-4a91-8ed6-aa451edf4d4d",
                "apiVersion": "v1",
                "resourceVersion": "481160",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/coredns/coredns:v1.8.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-558bd4d5db-pgrb2.169f9095c86d7e54",
                "namespace": "kube-system",
                "uid": "2dcc8c92-b3bf-47a6-8aa9-8398ea763370",
                "resourceVersion": "575252",
                "creationTimestamp": "2021-08-28T19:56:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-558bd4d5db-pgrb2",
                "uid": "15fe3491-fa04-4a91-8ed6-aa451edf4d4d",
                "apiVersion": "v1",
                "resourceVersion": "481160",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-558bd4d5db-pgrb2.169f9095cd730d73",
                "namespace": "kube-system",
                "uid": "195e9111-e678-4dd9-827b-bdf792d81d64",
                "resourceVersion": "575258",
                "creationTimestamp": "2021-08-28T19:56:08Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-558bd4d5db-pgrb2",
                "uid": "15fe3491-fa04-4a91-8ed6-aa451edf4d4d",
                "apiVersion": "v1",
                "resourceVersion": "481160",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-558bd4d5db-pgrb2.169f9095ec98d6c0",
                "namespace": "kube-system",
                "uid": "3238025a-b7be-4213-b87b-92897f9fece4",
                "resourceVersion": "575293",
                "creationTimestamp": "2021-08-28T19:56:09Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-558bd4d5db-pgrb2",
                "uid": "15fe3491-fa04-4a91-8ed6-aa451edf4d4d",
                "apiVersion": "v1",
                "resourceVersion": "481160",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: HTTP probe failed with statuscode: 503",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:21Z",
            "count": 3,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-558bd4d5db-vt45t.169f9095aedac8c4",
                "namespace": "kube-system",
                "uid": "f2d4c458-0c53-4f22-916c-d2d5c7fe22cf",
                "resourceVersion": "575241",
                "creationTimestamp": "2021-08-28T19:56:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-558bd4d5db-vt45t",
                "uid": "30da0c12-63de-4e5e-9c24-d14fbfd32530",
                "apiVersion": "v1",
                "resourceVersion": "481221"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:02Z",
            "lastTimestamp": "2021-08-28T19:56:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-558bd4d5db-vt45t.169f9095c64d1ca9",
                "namespace": "kube-system",
                "uid": "82514bd4-c9b2-484a-afad-6bccb8162234",
                "resourceVersion": "575249",
                "creationTimestamp": "2021-08-28T19:56:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-558bd4d5db-vt45t",
                "uid": "30da0c12-63de-4e5e-9c24-d14fbfd32530",
                "apiVersion": "v1",
                "resourceVersion": "481221",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/coredns/coredns:v1.8.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-558bd4d5db-vt45t.169f9095c8281548",
                "namespace": "kube-system",
                "uid": "220defa8-0416-4400-a20a-aa73d73ac361",
                "resourceVersion": "575250",
                "creationTimestamp": "2021-08-28T19:56:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-558bd4d5db-vt45t",
                "uid": "30da0c12-63de-4e5e-9c24-d14fbfd32530",
                "apiVersion": "v1",
                "resourceVersion": "481221",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-558bd4d5db-vt45t.169f9095cd5c1662",
                "namespace": "kube-system",
                "uid": "ee3fd751-8d5b-47dc-a867-e6fa75f40f1c",
                "resourceVersion": "575256",
                "creationTimestamp": "2021-08-28T19:56:08Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-558bd4d5db-vt45t",
                "uid": "30da0c12-63de-4e5e-9c24-d14fbfd32530",
                "apiVersion": "v1",
                "resourceVersion": "481221",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-558bd4d5db-vt45t.169f9095ec739fd1",
                "namespace": "kube-system",
                "uid": "570695aa-4147-4605-9c46-2f0329cec4a3",
                "resourceVersion": "575294",
                "creationTimestamp": "2021-08-28T19:56:08Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-558bd4d5db-vt45t",
                "uid": "30da0c12-63de-4e5e-9c24-d14fbfd32530",
                "apiVersion": "v1",
                "resourceVersion": "481221",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: HTTP probe failed with statuscode: 503",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:21Z",
            "count": 3,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-mkth-k8s-control-plane.169f9092c10f641e",
                "namespace": "kube-system",
                "uid": "7e86c3b6-8380-4e7e-9182-dc328b1d5727",
                "resourceVersion": "575209",
                "creationTimestamp": "2021-08-28T19:56:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-mkth-k8s-control-plane",
                "uid": "17d45cf1c90ad300db4f22625cb90c40",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-mkth-k8s-control-plane.169f9092c80e86ad",
                "namespace": "kube-system",
                "uid": "5443fba2-a094-4089-b88f-ceb3beb90adc",
                "resourceVersion": "575213",
                "creationTimestamp": "2021-08-28T19:56:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-mkth-k8s-control-plane",
                "uid": "17d45cf1c90ad300db4f22625cb90c40",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/etcd:3.4.13-0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-mkth-k8s-control-plane.169f9092cb0b63ec",
                "namespace": "kube-system",
                "uid": "1dacb475-f3e4-4f44-96e3-769cbb645648",
                "resourceVersion": "575216",
                "creationTimestamp": "2021-08-28T19:56:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-mkth-k8s-control-plane",
                "uid": "17d45cf1c90ad300db4f22625cb90c40",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Created",
            "message": "Created container etcd",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-mkth-k8s-control-plane.169f9092d0857626",
                "namespace": "kube-system",
                "uid": "2ccc5738-3bf2-4dae-a6d8-96bf271294f5",
                "resourceVersion": "575221",
                "creationTimestamp": "2021-08-28T19:56:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-mkth-k8s-control-plane",
                "uid": "17d45cf1c90ad300db4f22625cb90c40",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{etcd}"
            },
            "reason": "Started",
            "message": "Started container etcd",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-2pv8f.169f90982f9b8233",
                "namespace": "kube-system",
                "uid": "a46af615-7b18-4781-93b8-c1a04746b06d",
                "resourceVersion": "575280",
                "creationTimestamp": "2021-08-28T19:56:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-2pv8f",
                "uid": "65e1391e-5c14-4889-af74-5e20fe2b6454",
                "apiVersion": "v1",
                "resourceVersion": "481193"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:13Z",
            "lastTimestamp": "2021-08-28T19:56:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-2pv8f.169f909855e739c2",
                "namespace": "kube-system",
                "uid": "78cd8c1f-edb7-4f32-ab7c-abd8937aef1c",
                "resourceVersion": "575285",
                "creationTimestamp": "2021-08-28T19:56:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-2pv8f",
                "uid": "65e1391e-5c14-4889-af74-5e20fe2b6454",
                "apiVersion": "v1",
                "resourceVersion": "481193",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20210326-1e038dc5\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:14Z",
            "lastTimestamp": "2021-08-28T19:56:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-2pv8f.169f9098576b2005",
                "namespace": "kube-system",
                "uid": "68b67dd2-4ac4-4d4f-854e-39b301e19b63",
                "resourceVersion": "575286",
                "creationTimestamp": "2021-08-28T19:56:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-2pv8f",
                "uid": "65e1391e-5c14-4889-af74-5e20fe2b6454",
                "apiVersion": "v1",
                "resourceVersion": "481193",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:14Z",
            "lastTimestamp": "2021-08-28T19:56:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-2pv8f.169f909862453d7a",
                "namespace": "kube-system",
                "uid": "5889d8fc-53b9-40c2-bb48-27bdf9d756cb",
                "resourceVersion": "575288",
                "creationTimestamp": "2021-08-28T19:56:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-2pv8f",
                "uid": "65e1391e-5c14-4889-af74-5e20fe2b6454",
                "apiVersion": "v1",
                "resourceVersion": "481193",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:14Z",
            "lastTimestamp": "2021-08-28T19:56:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-h2sl7.169f90959cee892d",
                "namespace": "kube-system",
                "uid": "2dd8f5e2-9e63-497f-b1e4-7352d9264f35",
                "resourceVersion": "575233",
                "creationTimestamp": "2021-08-28T19:56:05Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-h2sl7",
                "uid": "f8e327b4-cb2f-4fd4-b1cb-c5f937199fe3",
                "apiVersion": "v1",
                "resourceVersion": "481142"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:02Z",
            "lastTimestamp": "2021-08-28T19:56:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-h2sl7.169f9095ba754e56",
                "namespace": "kube-system",
                "uid": "dc6a2daf-44b7-4c93-9f00-ff35f736bb74",
                "resourceVersion": "575243",
                "creationTimestamp": "2021-08-28T19:56:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-h2sl7",
                "uid": "f8e327b4-cb2f-4fd4-b1cb-c5f937199fe3",
                "apiVersion": "v1",
                "resourceVersion": "481142",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20210326-1e038dc5\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:02Z",
            "lastTimestamp": "2021-08-28T19:56:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-h2sl7.169f9095bc1d14fc",
                "namespace": "kube-system",
                "uid": "0ae9cb15-0266-4c4b-812f-99b9dd2baab5",
                "resourceVersion": "575244",
                "creationTimestamp": "2021-08-28T19:56:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-h2sl7",
                "uid": "f8e327b4-cb2f-4fd4-b1cb-c5f937199fe3",
                "apiVersion": "v1",
                "resourceVersion": "481142",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:02Z",
            "lastTimestamp": "2021-08-28T19:56:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-h2sl7.169f9095d259259b",
                "namespace": "kube-system",
                "uid": "d7cea610-7c60-404b-baed-acaf33e12aa3",
                "resourceVersion": "575259",
                "creationTimestamp": "2021-08-28T19:56:08Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-h2sl7",
                "uid": "f8e327b4-cb2f-4fd4-b1cb-c5f937199fe3",
                "apiVersion": "v1",
                "resourceVersion": "481142",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-mkth-k8s-control-plane.169f9092c10f7fd9",
                "namespace": "kube-system",
                "uid": "a80ef8a3-0255-4ea4-aa93-67dc56bf9c76",
                "resourceVersion": "575211",
                "creationTimestamp": "2021-08-28T19:56:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-mkth-k8s-control-plane",
                "uid": "4527a595c57d86d0b1cb938875736ed0",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-mkth-k8s-control-plane.169f9092c7f2c452",
                "namespace": "kube-system",
                "uid": "54dd20ed-0abb-4b10-84f1-8208b9daea11",
                "resourceVersion": "575212",
                "creationTimestamp": "2021-08-28T19:56:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-mkth-k8s-control-plane",
                "uid": "4527a595c57d86d0b1cb938875736ed0",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/kube-apiserver:v1.21.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-mkth-k8s-control-plane.169f9092cab462fe",
                "namespace": "kube-system",
                "uid": "20e0ea22-58dd-47f2-a62b-a8064c58bb40",
                "resourceVersion": "575215",
                "creationTimestamp": "2021-08-28T19:56:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-mkth-k8s-control-plane",
                "uid": "4527a595c57d86d0b1cb938875736ed0",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Created",
            "message": "Created container kube-apiserver",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-mkth-k8s-control-plane.169f9092d0a33a83",
                "namespace": "kube-system",
                "uid": "a50eb794-21c7-40f5-8cf7-229374fa04a5",
                "resourceVersion": "575223",
                "creationTimestamp": "2021-08-28T19:56:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-mkth-k8s-control-plane",
                "uid": "4527a595c57d86d0b1cb938875736ed0",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-apiserver}"
            },
            "reason": "Started",
            "message": "Started container kube-apiserver",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-mkth-k8s-control-plane.169f9092c10e3394",
                "namespace": "kube-system",
                "uid": "65c4b4e4-3099-4660-bcfb-1d03a48599bc",
                "resourceVersion": "575205",
                "creationTimestamp": "2021-08-28T19:56:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-mkth-k8s-control-plane",
                "uid": "627d3e5accc95802a305d9f12f7e6da2",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-mkth-k8s-control-plane.169f9092c819feb3",
                "namespace": "kube-system",
                "uid": "88394792-caef-492f-b4ca-28fdd6da034d",
                "resourceVersion": "575214",
                "creationTimestamp": "2021-08-28T19:56:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-mkth-k8s-control-plane",
                "uid": "627d3e5accc95802a305d9f12f7e6da2",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/kube-controller-manager:v1.21.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-mkth-k8s-control-plane.169f9092cb2887c9",
                "namespace": "kube-system",
                "uid": "f771f40b-5bb8-4272-b096-92c9d0b8df52",
                "resourceVersion": "575217",
                "creationTimestamp": "2021-08-28T19:56:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-mkth-k8s-control-plane",
                "uid": "627d3e5accc95802a305d9f12f7e6da2",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Created",
            "message": "Created container kube-controller-manager",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-mkth-k8s-control-plane.169f9092d0341f84",
                "namespace": "kube-system",
                "uid": "0fa7b5c9-3fbc-464f-a4a7-2a47d3d3140e",
                "resourceVersion": "575219",
                "creationTimestamp": "2021-08-28T19:56:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-mkth-k8s-control-plane",
                "uid": "627d3e5accc95802a305d9f12f7e6da2",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-controller-manager}"
            },
            "reason": "Started",
            "message": "Started container kube-controller-manager",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-5xch9.169f9098416ff80a",
                "namespace": "kube-system",
                "uid": "a7723adc-24ec-428b-8178-1dd8a0195b9c",
                "resourceVersion": "575281",
                "creationTimestamp": "2021-08-28T19:56:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-5xch9",
                "uid": "6c90d7ca-7c0b-4fdf-a5c3-de3adc8f52ab",
                "apiVersion": "v1",
                "resourceVersion": "481188"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:13Z",
            "lastTimestamp": "2021-08-28T19:56:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-5xch9.169f909847500a4f",
                "namespace": "kube-system",
                "uid": "480a9b85-b732-40ab-b6c1-7647fa7cf8d6",
                "resourceVersion": "575282",
                "creationTimestamp": "2021-08-28T19:56:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-5xch9",
                "uid": "6c90d7ca-7c0b-4fdf-a5c3-de3adc8f52ab",
                "apiVersion": "v1",
                "resourceVersion": "481188",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/kube-proxy:v1.21.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:13Z",
            "lastTimestamp": "2021-08-28T19:56:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-5xch9.169f909849722ff8",
                "namespace": "kube-system",
                "uid": "a71e00dd-72d9-42ee-9341-2a6a2f48e24b",
                "resourceVersion": "575283",
                "creationTimestamp": "2021-08-28T19:56:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-5xch9",
                "uid": "6c90d7ca-7c0b-4fdf-a5c3-de3adc8f52ab",
                "apiVersion": "v1",
                "resourceVersion": "481188",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:13Z",
            "lastTimestamp": "2021-08-28T19:56:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-5xch9.169f909850ae5db0",
                "namespace": "kube-system",
                "uid": "d4b06b2f-ceab-4110-95d1-cafb7bc69447",
                "resourceVersion": "575284",
                "creationTimestamp": "2021-08-28T19:56:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-5xch9",
                "uid": "6c90d7ca-7c0b-4fdf-a5c3-de3adc8f52ab",
                "apiVersion": "v1",
                "resourceVersion": "481188",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:13Z",
            "lastTimestamp": "2021-08-28T19:56:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-765x7.169f9095c0aa67f1",
                "namespace": "kube-system",
                "uid": "d7ba3812-ac36-43d8-868f-b8a3f142cc00",
                "resourceVersion": "575246",
                "creationTimestamp": "2021-08-28T19:56:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-765x7",
                "uid": "36396773-6db6-4860-a4bd-a5bfc9f741dd",
                "apiVersion": "v1",
                "resourceVersion": "481126"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:02Z",
            "lastTimestamp": "2021-08-28T19:56:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-765x7.169f9095c8f8ca46",
                "namespace": "kube-system",
                "uid": "109c98a4-ac3f-468e-b039-248cf36adff3",
                "resourceVersion": "575253",
                "creationTimestamp": "2021-08-28T19:56:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-765x7",
                "uid": "36396773-6db6-4860-a4bd-a5bfc9f741dd",
                "apiVersion": "v1",
                "resourceVersion": "481126",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/kube-proxy:v1.21.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-765x7.169f9095cac55f61",
                "namespace": "kube-system",
                "uid": "0b7cb979-ed60-4093-9f4e-115c77f6f93c",
                "resourceVersion": "575255",
                "creationTimestamp": "2021-08-28T19:56:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-765x7",
                "uid": "36396773-6db6-4860-a4bd-a5bfc9f741dd",
                "apiVersion": "v1",
                "resourceVersion": "481126",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-765x7.169f9095d34d71e6",
                "namespace": "kube-system",
                "uid": "ce25ca69-11eb-41c9-8226-101f0cd8cd35",
                "resourceVersion": "575261",
                "creationTimestamp": "2021-08-28T19:56:08Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-765x7",
                "uid": "36396773-6db6-4860-a4bd-a5bfc9f741dd",
                "apiVersion": "v1",
                "resourceVersion": "481126",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-mkth-k8s-control-plane.169f9092c10ee4de",
                "namespace": "kube-system",
                "uid": "ebe7fe99-13cc-4747-8090-be4ab92050cb",
                "resourceVersion": "575224",
                "creationTimestamp": "2021-08-28T19:56:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-mkth-k8s-control-plane",
                "uid": "8073bc05aca000576a9091a1c202275a",
                "apiVersion": "v1"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-mkth-k8s-control-plane.169f9092e6e96eb1",
                "namespace": "kube-system",
                "uid": "86ed434a-1816-40dd-8316-0b6fb7b3c9e6",
                "resourceVersion": "575226",
                "creationTimestamp": "2021-08-28T19:56:04Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-mkth-k8s-control-plane",
                "uid": "8073bc05aca000576a9091a1c202275a",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/kube-scheduler:v1.21.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-mkth-k8s-control-plane.169f9092e8af8608",
                "namespace": "kube-system",
                "uid": "7d484d4f-fb24-452f-a7ce-e95edcbcdd05",
                "resourceVersion": "575228",
                "creationTimestamp": "2021-08-28T19:56:04Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-mkth-k8s-control-plane",
                "uid": "8073bc05aca000576a9091a1c202275a",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Created",
            "message": "Created container kube-scheduler",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-mkth-k8s-control-plane.169f9092ed58a7a3",
                "namespace": "kube-system",
                "uid": "c002fbf9-f012-42af-852f-76d3b33b1fcc",
                "resourceVersion": "575230",
                "creationTimestamp": "2021-08-28T19:56:04Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-mkth-k8s-control-plane",
                "uid": "8073bc05aca000576a9091a1c202275a",
                "apiVersion": "v1",
                "fieldPath": "spec.containers{kube-scheduler}"
            },
            "reason": "Started",
            "message": "Started container kube-scheduler",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:50Z",
            "lastTimestamp": "2021-08-28T19:55:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "215a895c-196e-47f8-b9b6-ef47004affe4",
                "resourceVersion": "241",
                "creationTimestamp": "2021-08-18T01:07:25Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": [
        {
            "metadata": {
                "name": "kindnet",
                "namespace": "kube-system",
                "uid": "8efcef54-5d84-442b-8c18-5f256f268448",
                "resourceVersion": "61985",
                "generation": 1,
                "creationTimestamp": "2021-08-18T01:07:26Z",
                "labels": {
                    "app": "kindnet",
                    "k8s-app": "kindnet",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "kindnet"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kindnet",
                            "k8s-app": "kindnet",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-cfg",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kindnet-cni",
                                "image": "docker.io/kindest/kindnetd:v20210326-1e038dc5",
                                "env": [
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_SUBNET",
                                        "value": "10.244.0.0/16"
                                    },
                                    {
                                        "name": "CONTROL_PLANE_ENDPOINT",
                                        "value": "mkth-k8s-control-plane:6443"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-cfg",
                                        "mountPath": "/etc/cni/net.d"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_RAW",
                                            "NET_ADMIN"
                                        ]
                                    },
                                    "privileged": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kindnet",
                        "serviceAccount": "kindnet",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 4,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 4,
                "numberReady": 4,
                "observedGeneration": 1,
                "updatedNumberScheduled": 4,
                "numberAvailable": 4
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "a0eeb11b-85bb-4113-8a49-e3fc7f99ac72",
                "resourceVersion": "61984",
                "generation": 1,
                "creationTimestamp": "2021-08-18T01:07:25Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "k8s.gcr.io/kube-proxy:v1.21.1",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 4,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 4,
                "numberReady": 4,
                "observedGeneration": 1,
                "updatedNumberScheduled": 4,
                "numberAvailable": 4
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "78dc7662-de97-4569-93f1-8f3781d13e3a",
                "resourceVersion": "643",
                "generation": 1,
                "creationTimestamp": "2021-08-18T01:07:25Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "k8s.gcr.io/coredns/coredns:v1.8.0",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2021-08-18T01:07:52Z",
                        "lastTransitionTime": "2021-08-18T01:07:52Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2021-08-18T01:07:53Z",
                        "lastTransitionTime": "2021-08-18T01:07:39Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-558bd4d5db\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-558bd4d5db",
                "namespace": "kube-system",
                "uid": "65df6e77-751c-4fd0-b15c-ddf3a67898f9",
                "resourceVersion": "642",
                "generation": 1,
                "creationTimestamp": "2021-08-18T01:07:39Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "558bd4d5db"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "78dc7662-de97-4569-93f1-8f3781d13e3a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "558bd4d5db"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "558bd4d5db"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "k8s.gcr.io/coredns/coredns:v1.8.0",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-558bd4d5db-pgrb2",
                "generateName": "coredns-558bd4d5db-",
                "namespace": "kube-system",
                "uid": "15fe3491-fa04-4a91-8ed6-aa451edf4d4d",
                "resourceVersion": "575254",
                "creationTimestamp": "2021-08-18T01:07:39Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "558bd4d5db"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-558bd4d5db",
                        "uid": "65df6e77-751c-4fd0-b15c-ddf3a67898f9",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-ztmlc",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "k8s.gcr.io/coredns/coredns:v1.8.0",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-ztmlc",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "mkth-k8s-control-plane",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:50Z"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:01Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [coredns]"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:01Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [coredns]"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:50Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "10.244.0.3",
                "podIPs": [
                    {
                        "ip": "10.244.0.3"
                    }
                ],
                "startTime": "2021-08-18T01:07:50Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-28T19:56:03Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:50:05Z",
                                "finishedAt": "2021-08-28T19:55:38Z",
                                "containerID": "containerd://93b626e4721e044e0b3a6c687eea79e55eb03cbe3f92f3c1163f661023a3548e"
                            }
                        },
                        "ready": false,
                        "restartCount": 5,
                        "image": "k8s.gcr.io/coredns/coredns:v1.8.0",
                        "imageID": "sha256:296a6d5035e2d6919249e02709a488d680ddca91357602bd65e605eac967b899",
                        "containerID": "containerd://2daccb0219844c73710b5838d15090e2f0c0fa27f25169b3816173bec5b17891",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-558bd4d5db-vt45t",
                "generateName": "coredns-558bd4d5db-",
                "namespace": "kube-system",
                "uid": "30da0c12-63de-4e5e-9c24-d14fbfd32530",
                "resourceVersion": "575251",
                "creationTimestamp": "2021-08-18T01:07:39Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "558bd4d5db"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-558bd4d5db",
                        "uid": "65df6e77-751c-4fd0-b15c-ddf3a67898f9",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-4w28n",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "k8s.gcr.io/coredns/coredns:v1.8.0",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-4w28n",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "mkth-k8s-control-plane",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:50Z"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:01Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [coredns]"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:01Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [coredns]"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:50Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "10.244.0.4",
                "podIPs": [
                    {
                        "ip": "10.244.0.4"
                    }
                ],
                "startTime": "2021-08-18T01:07:50Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-28T19:56:03Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:50:04Z",
                                "finishedAt": "2021-08-28T19:55:38Z",
                                "containerID": "containerd://b132255efa8812f579e22878938270e9c3638494132a56ce5c5b5a54c4257e8b"
                            }
                        },
                        "ready": false,
                        "restartCount": 5,
                        "image": "k8s.gcr.io/coredns/coredns:v1.8.0",
                        "imageID": "sha256:296a6d5035e2d6919249e02709a488d680ddca91357602bd65e605eac967b899",
                        "containerID": "containerd://952db7cc6de9fd8da5051ca309b587260a7f463578dcea8bb22ff2e76a27aaaf",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-mkth-k8s-control-plane",
                "namespace": "kube-system",
                "uid": "49d90c5f-e2f3-4363-86e6-dd3f3b192bc0",
                "resourceVersion": "575268",
                "creationTimestamp": "2021-08-25T17:50:03Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.18.0.2:2379",
                    "kubernetes.io/config.hash": "17d45cf1c90ad300db4f22625cb90c40",
                    "kubernetes.io/config.mirror": "17d45cf1c90ad300db4f22625cb90c40",
                    "kubernetes.io/config.seen": "2021-08-25T17:49:50.109720198Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "mkth-k8s-control-plane",
                        "uid": "697367c3-cc99-459e-bd96-379a3b2768e1",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "k8s.gcr.io/etcd:3.4.13-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.18.0.2:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--initial-advertise-peer-urls=https://172.18.0.2:2380",
                            "--initial-cluster=mkth-k8s-control-plane=https://172.18.0.2:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.2:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.18.0.2:2380",
                            "--name=mkth-k8s-control-plane",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "ephemeral-storage": "100Mi",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "mkth-k8s-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:49:56Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:11Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:11Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:49:56Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2021-08-25T17:49:56Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-28T19:55:50Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:49:57Z",
                                "finishedAt": "2021-08-28T19:55:38Z",
                                "containerID": "containerd://aee7062aa2193fc3175ba1f6ce48370255605a39b966c584c8203a0ce1993d1f"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "k8s.gcr.io/etcd:3.4.13-0",
                        "imageID": "sha256:0369cf4303ffdb467dc219990960a9baa8512a54b0ad9283eaf55bd6c0adb934",
                        "containerID": "containerd://d898c197163017caca0bb73f7a59683ac27796c1126d1f4af1f2326a27ce4ce1",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kindnet-2lsz2",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "f516a27a-591d-46f1-9378-f7b07fabdfaf",
                "resourceVersion": "481201",
                "creationTimestamp": "2021-08-18T01:07:51Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "74cd9b5ccd",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "8efcef54-5d84-442b-8c18-5f256f268448",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-jqchs",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20210326-1e038dc5",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "mkth-k8s-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-jqchs",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "mkth-k8s-worker",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "mkth-k8s-worker"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:50:19Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:50:19Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "startTime": "2021-08-18T01:07:51Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-25T17:50:18Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:27:25Z",
                                "finishedAt": "2021-08-25T17:49:44Z",
                                "containerID": "containerd://80bcfd2fd6b9e81b40126937023f0b07cc66d85a6ca4a2e1a6f5e5045e0a0865"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "docker.io/kindest/kindnetd:v20210326-1e038dc5",
                        "imageID": "sha256:6de166512aa223315ff9cfd49bd4f13aab1591cd8fc57e31270f0e4aa34129cb",
                        "containerID": "containerd://4c2e06d598b14b08e6acb3eed1fdac2f628b9b7b4a1adf96a1798bf550c5c229",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kindnet-2pv8f",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "65e1391e-5c14-4889-af74-5e20fe2b6454",
                "resourceVersion": "575290",
                "creationTimestamp": "2021-08-18T01:07:51Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "74cd9b5ccd",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "8efcef54-5d84-442b-8c18-5f256f268448",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-m7xkv",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20210326-1e038dc5",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "mkth-k8s-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-m7xkv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "mkth-k8s-worker2",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "mkth-k8s-worker2"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:14Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:14Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "startTime": "2021-08-18T01:07:51Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-28T19:56:14Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:50:16Z",
                                "finishedAt": "2021-08-28T19:56:01Z",
                                "containerID": "containerd://c82acede1039d4aa5b9d0f7de63b1c55abe4d93bafb9224c149fc98c2c0ff465"
                            }
                        },
                        "ready": true,
                        "restartCount": 5,
                        "image": "docker.io/kindest/kindnetd:v20210326-1e038dc5",
                        "imageID": "sha256:6de166512aa223315ff9cfd49bd4f13aab1591cd8fc57e31270f0e4aa34129cb",
                        "containerID": "containerd://2f5ff1d52eeaa7dd0809286855492d8d8d07f9ca287c6a8dbd07d02bcc3c37b9",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kindnet-h2sl7",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "f8e327b4-cb2f-4fd4-b1cb-c5f937199fe3",
                "resourceVersion": "575257",
                "creationTimestamp": "2021-08-18T01:07:39Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "74cd9b5ccd",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "8efcef54-5d84-442b-8c18-5f256f268448",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-kg5rz",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20210326-1e038dc5",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "mkth-k8s-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-kg5rz",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "mkth-k8s-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "mkth-k8s-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:39Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:03Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:03Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:39Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2021-08-18T01:07:39Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-28T19:56:03Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:50:05Z",
                                "finishedAt": "2021-08-28T19:55:38Z",
                                "containerID": "containerd://8f5fed6d79b01eb1adb1c100eb36d7ed9e0cf818ac72b019f6c5dadbbeeda5ab"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "docker.io/kindest/kindnetd:v20210326-1e038dc5",
                        "imageID": "sha256:6de166512aa223315ff9cfd49bd4f13aab1591cd8fc57e31270f0e4aa34129cb",
                        "containerID": "containerd://b24630d27fe15f75960b601d75be18642c52702cc5383601c0c6673a492ad53a",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kindnet-zhqjv",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "cc5706e7-97a5-4a6b-b129-5b1cc2ea434e",
                "resourceVersion": "481084",
                "creationTimestamp": "2021-08-18T01:07:51Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "74cd9b5ccd",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "8efcef54-5d84-442b-8c18-5f256f268448",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-dx2c4",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20210326-1e038dc5",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "mkth-k8s-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-dx2c4",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "mkth-k8s-worker3",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "mkth-k8s-worker3"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:50:05Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:50:05Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "startTime": "2021-08-18T01:07:51Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-25T17:50:05Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:27:29Z",
                                "finishedAt": "2021-08-25T17:49:44Z",
                                "containerID": "containerd://e3a86acb54bfb42ac6a73f142321811028d1714393986b2d17aeaf57ca57b19b"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "docker.io/kindest/kindnetd:v20210326-1e038dc5",
                        "imageID": "sha256:6de166512aa223315ff9cfd49bd4f13aab1591cd8fc57e31270f0e4aa34129cb",
                        "containerID": "containerd://7388e6ee4276d9747e5fbad0f7727b5459f6b95e9a3621086cdff73c427e3efc",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-mkth-k8s-control-plane",
                "namespace": "kube-system",
                "uid": "38231304-030c-4737-aaf5-4943974e41cc",
                "resourceVersion": "575263",
                "creationTimestamp": "2021-08-25T17:50:03Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.18.0.2:6443",
                    "kubernetes.io/config.hash": "4527a595c57d86d0b1cb938875736ed0",
                    "kubernetes.io/config.mirror": "4527a595c57d86d0b1cb938875736ed0",
                    "kubernetes.io/config.seen": "2021-08-25T17:49:50.109740787Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "mkth-k8s-control-plane",
                        "uid": "697367c3-cc99-459e-bd96-379a3b2768e1",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "k8s.gcr.io/kube-apiserver:v1.21.1",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.18.0.2",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--insecure-port=0",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--runtime-config=",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "mkth-k8s-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:49:56Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:05Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:05Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:49:56Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2021-08-25T17:49:56Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-28T19:55:50Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:49:57Z",
                                "finishedAt": "2021-08-28T19:55:38Z",
                                "containerID": "containerd://3d9137bb81b46e7baa04e5c03aa927c3c151f2f0b6524de480435a444af24bfa"
                            }
                        },
                        "ready": true,
                        "restartCount": 1,
                        "image": "k8s.gcr.io/kube-apiserver:v1.21.1",
                        "imageID": "sha256:94ffe308aeff9fd5602df5fe8bea97dc5b3efe3c53532bb2b0edf26c72d140e3",
                        "containerID": "containerd://7f6ec33164b106f3fe8c55fd293b0c6a8037cddce06ee076396297a3791050e9",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-mkth-k8s-control-plane",
                "namespace": "kube-system",
                "uid": "3e2ffe2f-fa37-4f2f-a915-712879bd03c8",
                "resourceVersion": "575266",
                "creationTimestamp": "2021-08-18T01:07:36Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "627d3e5accc95802a305d9f12f7e6da2",
                    "kubernetes.io/config.mirror": "627d3e5accc95802a305d9f12f7e6da2",
                    "kubernetes.io/config.seen": "2021-08-18T01:07:30.421166831Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "mkth-k8s-control-plane",
                        "uid": "697367c3-cc99-459e-bd96-379a3b2768e1",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "k8s.gcr.io/kube-controller-manager:v1.21.1",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=mkth-k8s",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--port=0",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "mkth-k8s-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:49:56Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:09Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:09Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:49:56Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2021-08-25T17:49:56Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-28T19:55:50Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:49:57Z",
                                "finishedAt": "2021-08-28T19:55:38Z",
                                "containerID": "containerd://45ec495ac36d70407a2d6f34b54e2d5fd2fa1aedd7913d296e3f9999cf09fdd7"
                            }
                        },
                        "ready": true,
                        "restartCount": 8,
                        "image": "k8s.gcr.io/kube-controller-manager:v1.21.1",
                        "imageID": "sha256:96a295389d472f96d58764c2ed3e7418d0183f707765c21e6f310c2e163225a9",
                        "containerID": "containerd://3353650fef31b51acc386a75d73dd8a4d4b34ee43a0ce8eee53bd458b2342634",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-56f2w",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "a31b5ede-fdc6-41f8-8926-f5d175f2c921",
                "resourceVersion": "481074",
                "creationTimestamp": "2021-08-18T01:07:51Z",
                "labels": {
                    "controller-revision-hash": "6bc6858f58",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "a0eeb11b-85bb-4113-8a49-e3fc7f99ac72",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-w5xzv",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "k8s.gcr.io/kube-proxy:v1.21.1",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-w5xzv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "mkth-k8s-worker3",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "mkth-k8s-worker3"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:50:04Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:50:04Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "startTime": "2021-08-18T01:07:51Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-25T17:50:04Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T01:19:10Z",
                                "finishedAt": "2021-08-25T17:49:44Z",
                                "containerID": "containerd://51519ee21b237bc2fe9c13be5287546b76fd9d32cd36ac555e41208c0fc22a62"
                            }
                        },
                        "ready": true,
                        "restartCount": 3,
                        "image": "k8s.gcr.io/kube-proxy:v1.21.1",
                        "imageID": "sha256:0e124fb3c695bdbf30fe3328ef81e268a7f884f670e67c016f5e45c2058b2538",
                        "containerID": "containerd://8fe6d632639867ba009419cd3317886eb9982c62d77e39de14c26098a25bb6b3",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-582h8",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "4a3cbd8e-bb95-4dcd-83f3-4153319f415c",
                "resourceVersion": "481199",
                "creationTimestamp": "2021-08-18T01:07:51Z",
                "labels": {
                    "controller-revision-hash": "6bc6858f58",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "a0eeb11b-85bb-4113-8a49-e3fc7f99ac72",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-x4wh7",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "k8s.gcr.io/kube-proxy:v1.21.1",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-x4wh7",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "mkth-k8s-worker",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "mkth-k8s-worker"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:50:18Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:50:18Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "startTime": "2021-08-18T01:07:51Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-25T17:50:17Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T01:19:23Z",
                                "finishedAt": "2021-08-25T17:49:44Z",
                                "containerID": "containerd://1c388fb01c1aabefa119bc9b09ac7a1b922c4b17a8ad43177713205c48c2a33e"
                            }
                        },
                        "ready": true,
                        "restartCount": 3,
                        "image": "k8s.gcr.io/kube-proxy:v1.21.1",
                        "imageID": "sha256:0e124fb3c695bdbf30fe3328ef81e268a7f884f670e67c016f5e45c2058b2538",
                        "containerID": "containerd://0b43261932fa63c106bfca3641a81a4df312190ca8a80232ca4051e6109714f8",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-5xch9",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "6c90d7ca-7c0b-4fdf-a5c3-de3adc8f52ab",
                "resourceVersion": "575291",
                "creationTimestamp": "2021-08-18T01:07:51Z",
                "labels": {
                    "controller-revision-hash": "6bc6858f58",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "a0eeb11b-85bb-4113-8a49-e3fc7f99ac72",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-2tb8w",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "k8s.gcr.io/kube-proxy:v1.21.1",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-2tb8w",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "mkth-k8s-worker2",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "mkth-k8s-worker2"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:14Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:14Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:51Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "startTime": "2021-08-18T01:07:51Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-28T19:56:13Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:50:16Z",
                                "finishedAt": "2021-08-28T19:56:01Z",
                                "containerID": "containerd://86cf8f03955b1fb43e08e7175f2c3a6e45ed3eb8271f1c77bbead677c5fef71d"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "k8s.gcr.io/kube-proxy:v1.21.1",
                        "imageID": "sha256:0e124fb3c695bdbf30fe3328ef81e268a7f884f670e67c016f5e45c2058b2538",
                        "containerID": "containerd://22b1882564e25fb632a54512d7bc9dc7e1c3897e927503a390648b3aced98fd5",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-765x7",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "36396773-6db6-4860-a4bd-a5bfc9f741dd",
                "resourceVersion": "575248",
                "creationTimestamp": "2021-08-18T01:07:39Z",
                "labels": {
                    "controller-revision-hash": "6bc6858f58",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "a0eeb11b-85bb-4113-8a49-e3fc7f99ac72",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-g6m5g",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "k8s.gcr.io/kube-proxy:v1.21.1",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-g6m5g",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "mkth-k8s-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "mkth-k8s-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:39Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:03Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:03Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-18T01:07:39Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2021-08-18T01:07:39Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-28T19:56:03Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:50:05Z",
                                "finishedAt": "2021-08-28T19:55:38Z",
                                "containerID": "containerd://a06717d5b7ece622a66983ef9831ccaa4850148748f014ab1bee0ddd98931fc0"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "k8s.gcr.io/kube-proxy:v1.21.1",
                        "imageID": "sha256:0e124fb3c695bdbf30fe3328ef81e268a7f884f670e67c016f5e45c2058b2538",
                        "containerID": "containerd://7750419fca69b16c52962ffa86c147cc711735656a42ce3df9a1b7c12f401977",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-mkth-k8s-control-plane",
                "namespace": "kube-system",
                "uid": "ebb93d60-ca7f-4e79-9914-0f05b4880a73",
                "resourceVersion": "575242",
                "creationTimestamp": "2021-08-18T01:07:24Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "8073bc05aca000576a9091a1c202275a",
                    "kubernetes.io/config.mirror": "8073bc05aca000576a9091a1c202275a",
                    "kubernetes.io/config.seen": "2021-08-18T01:07:09.791751624Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "mkth-k8s-control-plane",
                        "uid": "697367c3-cc99-459e-bd96-379a3b2768e1",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "k8s.gcr.io/kube-scheduler:v1.21.1",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true",
                            "--port=0"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "mkth-k8s-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:49:56Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:02Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-28T19:56:02Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-08-25T17:49:56Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2021-08-25T17:49:56Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2021-08-28T19:55:50Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 255,
                                "reason": "Unknown",
                                "startedAt": "2021-08-25T17:49:57Z",
                                "finishedAt": "2021-08-28T19:55:38Z",
                                "containerID": "containerd://bceccc50c88b3bbb30ea7a28c4086583ecf03d91c545cf7b411df371d2533252"
                            }
                        },
                        "ready": true,
                        "restartCount": 9,
                        "image": "k8s.gcr.io/kube-scheduler:v1.21.1",
                        "imageID": "sha256:1248d2d503d37429342d5e994559f8559f35d80a31b224d4db5324816fff7206",
                        "containerID": "containerd://583b41cefe8b6e7010e292b626345b67080ebd45e99c2f2144176ca0566fb9d4",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-558bd4d5db-pgrb2 ====
[INFO] plugin/ready: Still waiting on: "kubernetes"
.:53
[INFO] plugin/reload: Running configuration MD5 = db32ca3650231d74073ff4cf814959a7
CoreDNS-1.8.0
linux/amd64, go1.15.3, 054c9ae
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
==== END logs for container coredns of pod kube-system/coredns-558bd4d5db-pgrb2 ====
==== START logs for container coredns of pod kube-system/coredns-558bd4d5db-vt45t ====
[INFO] plugin/ready: Still waiting on: "kubernetes"
.:53
[INFO] plugin/reload: Running configuration MD5 = db32ca3650231d74073ff4cf814959a7
CoreDNS-1.8.0
linux/amd64, go1.15.3, 054c9ae
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
==== END logs for container coredns of pod kube-system/coredns-558bd4d5db-vt45t ====
==== START logs for container etcd of pod kube-system/etcd-mkth-k8s-control-plane ====
[WARNING] Deprecated '--logger=capnslog' flag is set; use '--logger=zap' flag instead
2021-08-28 19:55:50.434391 I | etcdmain: etcd Version: 3.4.13
2021-08-28 19:55:50.434580 I | etcdmain: Git SHA: ae9734ed2
2021-08-28 19:55:50.434583 I | etcdmain: Go Version: go1.12.17
2021-08-28 19:55:50.434586 I | etcdmain: Go OS/Arch: linux/amd64
2021-08-28 19:55:50.434589 I | etcdmain: setting maximum number of CPUs to 8, total number of available CPUs is 8
2021-08-28 19:55:50.434870 N | etcdmain: the server is already initialized as member before, starting as etcd member...
[WARNING] Deprecated '--logger=capnslog' flag is set; use '--logger=zap' flag instead
2021-08-28 19:55:50.434966 I | embed: peerTLS: cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = 
2021-08-28 19:55:50.435957 I | embed: name = mkth-k8s-control-plane
2021-08-28 19:55:50.435971 I | embed: data dir = /var/lib/etcd
2021-08-28 19:55:50.435974 I | embed: member dir = /var/lib/etcd/member
2021-08-28 19:55:50.435977 I | embed: heartbeat = 100ms
2021-08-28 19:55:50.435979 I | embed: election = 1000ms
2021-08-28 19:55:50.435981 I | embed: snapshot count = 10000
2021-08-28 19:55:50.435995 I | embed: advertise client URLs = https://172.18.0.2:2379
2021-08-28 19:55:50.436000 I | embed: initial advertise peer URLs = https://172.18.0.2:2380
2021-08-28 19:55:50.436004 I | embed: initial cluster = 
2021-08-28 19:55:51.367333 I | etcdserver: recovered store from snapshot at index 710086
2021-08-28 19:55:51.368841 I | mvcc: restore compact to 574719
2021-08-28 19:55:51.514258 I | etcdserver: restarting member 5320353a7d98bdee in cluster b61dd090a9d8a70a at commit index 719130
raft2021/08/28 19:55:51 INFO: 5320353a7d98bdee switched to configuration voters=(5989846029734297070)
raft2021/08/28 19:55:51 INFO: 5320353a7d98bdee became follower at term 5
raft2021/08/28 19:55:51 INFO: newRaft 5320353a7d98bdee [peers: [5320353a7d98bdee], term: 5, commit: 719130, applied: 710086, lastindex: 719130, lastterm: 5]
2021-08-28 19:55:51.514691 I | etcdserver/api: enabled capabilities for version 3.4
2021-08-28 19:55:51.514702 I | etcdserver/membership: added member 5320353a7d98bdee [https://172.18.0.4:2380] to cluster b61dd090a9d8a70a from store
2021-08-28 19:55:51.514707 I | etcdserver/membership: set the cluster version to 3.4 from store
2021-08-28 19:55:51.516452 W | auth: simple token is not cryptographically signed
2021-08-28 19:55:51.518301 I | mvcc: restore compact to 574719
2021-08-28 19:55:51.521459 I | etcdserver: starting server... [version: 3.4.13, cluster version: 3.4]
2021-08-28 19:55:51.521516 I | etcdserver: 5320353a7d98bdee as single-node; fast-forwarding 9 ticks (election ticks 10)
2021-08-28 19:55:51.524472 I | embed: ClientTLS: cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = 
2021-08-28 19:55:51.524539 I | embed: listening for peers on 172.18.0.2:2380
2021-08-28 19:55:51.524622 I | embed: listening for metrics on http://127.0.0.1:2381
raft2021/08/28 19:55:51 INFO: 5320353a7d98bdee is starting a new election at term 5
raft2021/08/28 19:55:51 INFO: 5320353a7d98bdee became candidate at term 6
raft2021/08/28 19:55:51 INFO: 5320353a7d98bdee received MsgVoteResp from 5320353a7d98bdee at term 6
raft2021/08/28 19:55:51 INFO: 5320353a7d98bdee became leader at term 6
raft2021/08/28 19:55:51 INFO: raft.node: 5320353a7d98bdee elected leader 5320353a7d98bdee at term 6
2021-08-28 19:55:51.623023 I | etcdserver: published {Name:mkth-k8s-control-plane ClientURLs:[https://172.18.0.2:2379]} to cluster b61dd090a9d8a70a
2021-08-28 19:55:51.623035 I | embed: ready to serve client requests
2021-08-28 19:55:51.623067 I | embed: ready to serve client requests
2021-08-28 19:55:51.624400 I | embed: serving client requests on 127.0.0.1:2379
2021-08-28 19:55:51.624452 I | embed: serving client requests on 172.18.0.2:2379
2021-08-28 19:56:11.373550 I | etcdserver/api/etcdhttp: /health OK (status code 200)
2021-08-28 19:56:14.486473 I | etcdserver/api/etcdhttp: /health OK (status code 200)
==== END logs for container etcd of pod kube-system/etcd-mkth-k8s-control-plane ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-2lsz2 ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods kindnet-2lsz2)
==== END logs for container kindnet-cni of pod kube-system/kindnet-2lsz2 ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-2pv8f ====
I0828 19:56:14.400876       1 main.go:316] probe TCP address mkth-k8s-control-plane:6443
I0828 19:56:14.403510       1 main.go:102] connected to apiserver: https://mkth-k8s-control-plane:6443
I0828 19:56:14.403519       1 main.go:107] hostIP = 172.18.0.4
podIP = 172.18.0.4
I0828 19:56:14.403576       1 main.go:116] setting mtu 1500 for CNI 
I0828 19:56:14.403585       1 main.go:146] kindnetd IP family: "ipv4"
I0828 19:56:14.403593       1 main.go:150] noMask IPv4 subnets: [10.244.0.0/16]
I0828 19:56:15.579974       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0828 19:56:15.580061       1 main.go:250] Node mkth-k8s-control-plane has CIDR [10.244.0.0/24] 
I0828 19:56:15.580446       1 routes.go:46] Adding route {Ifindex: 0 Dst: 10.244.0.0/24 Src: <nil> Gw: 172.18.0.2 Flags: [] Table: 0} 
I0828 19:56:15.580656       1 main.go:223] Handling node with IPs: map[172.18.0.5:{}]
I0828 19:56:15.580688       1 main.go:250] Node mkth-k8s-worker has CIDR [10.244.3.0/24] 
I0828 19:56:15.580962       1 routes.go:46] Adding route {Ifindex: 0 Dst: 10.244.3.0/24 Src: <nil> Gw: 172.18.0.5 Flags: [] Table: 0} 
I0828 19:56:15.581127       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0828 19:56:15.581180       1 main.go:227] handling current node
I0828 19:56:15.589326       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0828 19:56:15.589392       1 main.go:227] handling current node
==== END logs for container kindnet-cni of pod kube-system/kindnet-2pv8f ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-h2sl7 ====
I0828 19:56:03.481667       1 main.go:316] probe TCP address mkth-k8s-control-plane:6443
I0828 19:56:03.484238       1 main.go:102] connected to apiserver: https://mkth-k8s-control-plane:6443
I0828 19:56:03.484250       1 main.go:107] hostIP = 172.18.0.2
podIP = 172.18.0.2
I0828 19:56:03.484391       1 main.go:116] setting mtu 1500 for CNI 
I0828 19:56:03.484408       1 main.go:146] kindnetd IP family: "ipv4"
I0828 19:56:03.484421       1 main.go:150] noMask IPv4 subnets: [10.244.0.0/16]
I0828 19:56:04.280609       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0828 19:56:04.280637       1 main.go:227] handling current node
I0828 19:56:04.382388       1 main.go:223] Handling node with IPs: map[172.18.0.5:{}]
I0828 19:56:04.382457       1 main.go:250] Node mkth-k8s-worker has CIDR [10.244.3.0/24] 
I0828 19:56:04.382826       1 routes.go:46] Adding route {Ifindex: 0 Dst: 10.244.3.0/24 Src: <nil> Gw: 172.18.0.5 Flags: [] Table: 0} 
I0828 19:56:04.383033       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0828 19:56:04.383060       1 main.go:250] Node mkth-k8s-worker2 has CIDR [10.244.1.0/24] 
I0828 19:56:04.383240       1 routes.go:46] Adding route {Ifindex: 0 Dst: 10.244.1.0/24 Src: <nil> Gw: 172.18.0.3 Flags: [] Table: 0} 
I0828 19:56:04.383403       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0828 19:56:04.383450       1 main.go:250] Node mkth-k8s-worker3 has CIDR [10.244.2.0/24] 
I0828 19:56:04.383694       1 routes.go:46] Adding route {Ifindex: 0 Dst: 10.244.2.0/24 Src: <nil> Gw: 172.18.0.4 Flags: [] Table: 0} 
I0828 19:56:14.386155       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0828 19:56:14.386172       1 main.go:227] handling current node
I0828 19:56:14.386181       1 main.go:223] Handling node with IPs: map[172.18.0.5:{}]
I0828 19:56:14.386185       1 main.go:250] Node mkth-k8s-worker has CIDR [10.244.3.0/24] 
I0828 19:56:14.386270       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0828 19:56:14.386279       1 main.go:250] Node mkth-k8s-worker2 has CIDR [10.244.1.0/24] 
I0828 19:56:14.386319       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0828 19:56:14.386327       1 main.go:250] Node mkth-k8s-worker3 has CIDR [10.244.2.0/24] 
==== END logs for container kindnet-cni of pod kube-system/kindnet-h2sl7 ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-zhqjv ====
Request log error: the server could not find the requested resource (get pods kindnet-zhqjv)
==== END logs for container kindnet-cni of pod kube-system/kindnet-zhqjv ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-mkth-k8s-control-plane ====
Flag --insecure-port has been deprecated, This flag has no effect now and will be removed in v1.24.
I0828 19:55:50.565172       1 server.go:629] external host was not specified, using 172.18.0.2
I0828 19:55:50.565958       1 server.go:181] Version: v1.21.1
I0828 19:55:50.745831       1 shared_informer.go:240] Waiting for caches to sync for node_authorizer
I0828 19:55:50.748124       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0828 19:55:50.748137       1 plugins.go:161] Loaded 10 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
I0828 19:55:50.750089       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0828 19:55:50.750099       1 plugins.go:161] Loaded 10 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
I0828 19:55:50.754067       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:50.754099       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.631653       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.631672       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.638856       1 client.go:360] parsed scheme: "passthrough"
I0828 19:55:51.638879       1 passthrough.go:48] ccResolverWrapper: sending update to cc: {[{https://127.0.0.1:2379  <nil> 0 <nil>}] <nil> <nil>}
I0828 19:55:51.638886       1 clientconn.go:948] ClientConn switching balancer to "pick_first"
I0828 19:55:51.639376       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.639391       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.671196       1 instance.go:283] Using reconciler: lease
I0828 19:55:51.671482       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.671497       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.678355       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.678381       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.685504       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.685523       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.691713       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.691737       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.698351       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.698376       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.705498       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.705544       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.710670       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.710692       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.717811       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.717837       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.726745       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.726764       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.731751       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.731776       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.736866       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.736892       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.741324       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.741349       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.742109       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.742133       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.748898       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.748924       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.753897       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.753923       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.758786       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.758811       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.763580       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.763595       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.769175       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.769322       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.774874       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.774893       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.779803       1 rest.go:130] the default service ipfamily for this cluster is: IPv4
I0828 19:55:51.866724       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.866753       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.874043       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.874068       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.880545       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.880573       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.886945       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.886967       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.893718       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.893747       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.900197       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.900221       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.906909       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.906938       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.913468       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.913497       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.920058       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.920084       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.926703       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.926731       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.933147       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.933169       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.939806       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.939831       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.946620       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.946652       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.953789       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.953957       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.961863       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.961891       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.968189       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.968216       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.974835       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.974859       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.984888       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.984917       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.991761       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.991787       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:51.998332       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:51.998354       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.004818       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.004842       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.011843       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.011877       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.018491       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.018517       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.025187       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.025212       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.031960       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.031990       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.038449       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.038472       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.069224       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.069256       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.079167       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.079206       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.088807       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.088840       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.098455       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.098512       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.108571       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.108610       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.122031       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.122073       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.130081       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.130110       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.137178       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.137205       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.165434       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.165465       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.174188       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.174220       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.182937       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.182975       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.191586       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.191620       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.200704       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.200768       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.209371       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.209414       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.218426       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.218457       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.227427       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.227459       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.236320       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.236360       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.248294       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.248329       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.257505       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.257554       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.266502       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.266542       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.275554       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.275593       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.284410       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.284453       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.293482       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.293520       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.302962       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.302998       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.311873       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.311903       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.320936       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.320973       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.330473       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.330527       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.345870       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.345911       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.354716       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.354745       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
W0828 19:55:52.505436       1 genericapiserver.go:425] Skipping API node.k8s.io/v1alpha1 because it has no resources.
W0828 19:55:52.514315       1 genericapiserver.go:425] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
W0828 19:55:52.517048       1 genericapiserver.go:425] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
W0828 19:55:52.521183       1 genericapiserver.go:425] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
W0828 19:55:52.522968       1 genericapiserver.go:425] Skipping API flowcontrol.apiserver.k8s.io/v1alpha1 because it has no resources.
W0828 19:55:52.526185       1 genericapiserver.go:425] Skipping API apps/v1beta2 because it has no resources.
W0828 19:55:52.526195       1 genericapiserver.go:425] Skipping API apps/v1beta1 because it has no resources.
I0828 19:55:52.532013       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0828 19:55:52.532027       1 plugins.go:161] Loaded 10 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
I0828 19:55:52.533203       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.533218       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:52.538100       1 client.go:360] parsed scheme: "endpoint"
I0828 19:55:52.538119       1 endpoint.go:68] ccResolverWrapper: sending new addresses to cc: [{https://127.0.0.1:2379  <nil> 0 <nil>}]
I0828 19:55:54.225259       1 dynamic_cafile_content.go:167] Starting request-header::/etc/kubernetes/pki/front-proxy-ca.crt
I0828 19:55:54.225259       1 dynamic_cafile_content.go:167] Starting client-ca-bundle::/etc/kubernetes/pki/ca.crt
I0828 19:55:54.225473       1 dynamic_serving_content.go:130] Starting serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key
I0828 19:55:54.225725       1 secure_serving.go:197] Serving securely on [::]:6443
I0828 19:55:54.225811       1 controller.go:83] Starting OpenAPI AggregationController
I0828 19:55:54.225837       1 apf_controller.go:294] Starting API Priority and Fairness config controller
I0828 19:55:54.225849       1 dynamic_serving_content.go:130] Starting aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key
I0828 19:55:54.226114       1 tlsconfig.go:240] Starting DynamicServingCertificateController
I0828 19:55:54.226152       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0828 19:55:54.226179       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0828 19:55:54.226202       1 autoregister_controller.go:141] Starting autoregister controller
I0828 19:55:54.226213       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0828 19:55:54.226580       1 available_controller.go:475] Starting AvailableConditionController
I0828 19:55:54.226589       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0828 19:55:54.226611       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0828 19:55:54.226621       1 shared_informer.go:240] Waiting for caches to sync for crd-autoregister
I0828 19:55:54.235782       1 customresource_discovery_controller.go:209] Starting DiscoveryController
I0828 19:55:54.235810       1 controller.go:86] Starting OpenAPI controller
I0828 19:55:54.235824       1 naming_controller.go:291] Starting NamingConditionController
I0828 19:55:54.235836       1 establishing_controller.go:76] Starting EstablishingController
I0828 19:55:54.235856       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0828 19:55:54.235871       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0828 19:55:54.235883       1 crd_finalizer.go:266] Starting CRDFinalizer
I0828 19:55:54.246491       1 controller.go:611] quota admission added evaluator for: leases.coordination.k8s.io
I0828 19:55:54.250399       1 dynamic_cafile_content.go:167] Starting client-ca-bundle::/etc/kubernetes/pki/ca.crt
I0828 19:55:54.250405       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0828 19:55:54.250418       1 shared_informer.go:240] Waiting for caches to sync for cluster_authentication_trust_controller
I0828 19:55:54.250430       1 dynamic_cafile_content.go:167] Starting request-header::/etc/kubernetes/pki/front-proxy-ca.crt
E0828 19:55:54.252513       1 controller.go:152] Unable to remove old endpoints from kubernetes service: no master IPs were listed in storage, refusing to erase all endpoints for the kubernetes service
I0828 19:55:54.326576       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0828 19:55:54.326671       1 shared_informer.go:247] Caches are synced for crd-autoregister 
I0828 19:55:54.326730       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0828 19:55:54.326766       1 apf_controller.go:299] Running API Priority and Fairness config worker
I0828 19:55:54.326730       1 cache.go:39] Caches are synced for autoregister controller
I0828 19:55:54.346480       1 shared_informer.go:247] Caches are synced for node_authorizer 
I0828 19:55:54.350519       1 shared_informer.go:247] Caches are synced for cluster_authentication_trust_controller 
I0828 19:55:55.226452       1 controller.go:132] OpenAPI AggregationController: action for item : Nothing (removed from the queue).
I0828 19:55:55.227008       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0828 19:55:55.234343       1 storage_scheduling.go:148] all system priority classes are created successfully or already exist.
E0828 19:56:23.730121       1 status.go:71] apiserver received an error that is not an metav1.Status: &url.Error{Op:"Get", URL:"https://172.18.0.5:10250/containerLogs/kube-system/kindnet-2lsz2/kindnet-cni", Err:(*net.OpError)(0xc007591ef0)}: Get "https://172.18.0.5:10250/containerLogs/kube-system/kindnet-2lsz2/kindnet-cni": dial tcp 172.18.0.5:10250: connect: connection refused
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-mkth-k8s-control-plane ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-mkth-k8s-control-plane ====
Flag --port has been deprecated, see --secure-port instead.
I0828 19:55:51.433647       1 serving.go:347] Generated self-signed cert in-memory
I0828 19:55:51.739343       1 controllermanager.go:175] Version: v1.21.1
I0828 19:55:51.740280       1 dynamic_cafile_content.go:167] Starting request-header::/etc/kubernetes/pki/front-proxy-ca.crt
I0828 19:55:51.740280       1 dynamic_cafile_content.go:167] Starting client-ca-bundle::/etc/kubernetes/pki/ca.crt
I0828 19:55:51.741079       1 secure_serving.go:197] Serving securely on 127.0.0.1:10257
I0828 19:55:51.741100       1 tlsconfig.go:240] Starting DynamicServingCertificateController
I0828 19:55:51.741277       1 leaderelection.go:243] attempting to acquire leader lease kube-system/kube-controller-manager...
E0828 19:55:54.729455       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: no route to host
E0828 19:55:57.801442       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: no route to host
E0828 19:56:01.119540       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:04.750242       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:08.190819       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:10.286567       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:13.013821       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:15.646872       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:18.046154       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:20.120960       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:23.158607       1 leaderelection.go:325] error retrieving resource lock kube-system/kube-controller-manager: Get "https://172.18.0.4:6443/apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager?timeout=5s": dial tcp 172.18.0.4:6443: connect: connection refused
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-mkth-k8s-control-plane ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-56f2w ====
Request log error: the server could not find the requested resource (get pods kube-proxy-56f2w)
==== END logs for container kube-proxy of pod kube-system/kube-proxy-56f2w ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-582h8 ====
Request log error: an error on the server ("unknown") has prevented the request from succeeding (get pods kube-proxy-582h8)
==== END logs for container kube-proxy of pod kube-system/kube-proxy-582h8 ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-5xch9 ====
I0828 19:56:14.146201       1 node.go:172] Successfully retrieved node IP: 172.18.0.4
I0828 19:56:14.146263       1 server_others.go:140] Detected node IP 172.18.0.4
I0828 19:56:14.204368       1 server_others.go:206] kube-proxy running in dual-stack mode, IPv4-primary
I0828 19:56:14.204449       1 server_others.go:212] Using iptables Proxier.
I0828 19:56:14.204493       1 server_others.go:219] creating dualStackProxier for iptables.
W0828 19:56:14.204538       1 server_others.go:512] detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6
I0828 19:56:14.206757       1 server.go:643] Version: v1.21.1
I0828 19:56:14.207968       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I0828 19:56:14.208149       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I0828 19:56:14.209200       1 config.go:315] Starting service config controller
I0828 19:56:14.209274       1 config.go:224] Starting endpoint slice config controller
I0828 19:56:14.209883       1 shared_informer.go:240] Waiting for caches to sync for service config
I0828 19:56:14.210035       1 shared_informer.go:240] Waiting for caches to sync for endpoint slice config
W0828 19:56:14.216089       1 warnings.go:70] discovery.k8s.io/v1beta1 EndpointSlice is deprecated in v1.21+, unavailable in v1.25+; use discovery.k8s.io/v1 EndpointSlice
W0828 19:56:14.218582       1 warnings.go:70] discovery.k8s.io/v1beta1 EndpointSlice is deprecated in v1.21+, unavailable in v1.25+; use discovery.k8s.io/v1 EndpointSlice
I0828 19:56:14.310912       1 shared_informer.go:247] Caches are synced for service config 
I0828 19:56:14.311016       1 shared_informer.go:247] Caches are synced for endpoint slice config 
==== END logs for container kube-proxy of pod kube-system/kube-proxy-5xch9 ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-765x7 ====
I0828 19:56:03.474260       1 node.go:172] Successfully retrieved node IP: 172.18.0.2
I0828 19:56:03.474330       1 server_others.go:140] Detected node IP 172.18.0.2
I0828 19:56:03.500192       1 server_others.go:206] kube-proxy running in dual-stack mode, IPv4-primary
I0828 19:56:03.500221       1 server_others.go:212] Using iptables Proxier.
I0828 19:56:03.500236       1 server_others.go:219] creating dualStackProxier for iptables.
W0828 19:56:03.500249       1 server_others.go:512] detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6
I0828 19:56:03.502273       1 server.go:643] Version: v1.21.1
I0828 19:56:03.503137       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I0828 19:56:03.503213       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I0828 19:56:03.503773       1 config.go:315] Starting service config controller
I0828 19:56:03.503922       1 config.go:224] Starting endpoint slice config controller
I0828 19:56:03.504001       1 shared_informer.go:240] Waiting for caches to sync for service config
I0828 19:56:03.504098       1 shared_informer.go:240] Waiting for caches to sync for endpoint slice config
W0828 19:56:03.505920       1 warnings.go:70] discovery.k8s.io/v1beta1 EndpointSlice is deprecated in v1.21+, unavailable in v1.25+; use discovery.k8s.io/v1 EndpointSlice
W0828 19:56:03.507048       1 warnings.go:70] discovery.k8s.io/v1beta1 EndpointSlice is deprecated in v1.21+, unavailable in v1.25+; use discovery.k8s.io/v1 EndpointSlice
I0828 19:56:03.604950       1 shared_informer.go:247] Caches are synced for service config 
I0828 19:56:03.605022       1 shared_informer.go:247] Caches are synced for endpoint slice config 
==== END logs for container kube-proxy of pod kube-system/kube-proxy-765x7 ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-mkth-k8s-control-plane ====
I0828 19:55:51.353738       1 serving.go:347] Generated self-signed cert in-memory
W0828 19:55:54.729418       1 authentication.go:337] Error looking up in-cluster authentication configuration: Get "https://172.18.0.4:6443/api/v1/namespaces/kube-system/configmaps/extension-apiserver-authentication": dial tcp 172.18.0.4:6443: connect: no route to host
W0828 19:55:54.729537       1 authentication.go:338] Continuing without authentication configuration. This may treat all requests as anonymous.
W0828 19:55:54.729561       1 authentication.go:339] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0828 19:55:57.829401       1 configmap_cafile_content.go:202] Starting client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0828 19:55:57.829429       1 shared_informer.go:240] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0828 19:55:57.829740       1 secure_serving.go:197] Serving securely on 127.0.0.1:10259
I0828 19:55:57.829791       1 tlsconfig.go:240] Starting DynamicServingCertificateController
E0828 19:55:59.850357       1 reflector.go:138] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: Get "https://172.18.0.4:6443/api/v1/namespaces/kube-system/configmaps?fieldSelector=metadata.name%3Dextension-apiserver-authentication&limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.850362       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: Get "https://172.18.0.4:6443/api/v1/replicationcontrollers?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.851019       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/csinodes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.851027       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: Get "https://172.18.0.4:6443/apis/apps/v1/replicasets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.851440       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: Get "https://172.18.0.4:6443/api/v1/nodes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.851514       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1beta1.CSIStorageCapacity: failed to list *v1beta1.CSIStorageCapacity: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1beta1/csistoragecapacities?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.850366       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/csidrivers?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.850366       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: Get "https://172.18.0.4:6443/api/v1/persistentvolumeclaims?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.850487       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: Get "https://172.18.0.4:6443/api/v1/pods?fieldSelector=status.phase%21%3DSucceeded%2Cstatus.phase%21%3DFailed&limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.850532       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/storageclasses?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.850635       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: Get "https://172.18.0.4:6443/api/v1/persistentvolumes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.851901       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://172.18.0.4:6443/api/v1/services?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.852055       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: Get "https://172.18.0.4:6443/apis/policy/v1/poddisruptionbudgets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:55:59.852127       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: Get "https://172.18.0.4:6443/apis/apps/v1/statefulsets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:00.677769       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: Get "https://172.18.0.4:6443/api/v1/persistentvolumes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:00.694986       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: Get "https://172.18.0.4:6443/apis/apps/v1/replicasets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:00.727187       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/storageclasses?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:00.733390       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: Get "https://172.18.0.4:6443/api/v1/nodes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:00.764639       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: Get "https://172.18.0.4:6443/api/v1/replicationcontrollers?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:00.775502       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/csinodes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:00.906751       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: Get "https://172.18.0.4:6443/api/v1/pods?fieldSelector=status.phase%21%3DSucceeded%2Cstatus.phase%21%3DFailed&limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:00.992462       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1beta1.CSIStorageCapacity: failed to list *v1beta1.CSIStorageCapacity: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1beta1/csistoragecapacities?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:01.022808       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: Get "https://172.18.0.4:6443/apis/policy/v1/poddisruptionbudgets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:01.056279       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: Get "https://172.18.0.4:6443/apis/apps/v1/statefulsets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:01.348163       1 reflector.go:138] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: Get "https://172.18.0.4:6443/api/v1/namespaces/kube-system/configmaps?fieldSelector=metadata.name%3Dextension-apiserver-authentication&limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:01.354402       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/csidrivers?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:01.388923       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: Get "https://172.18.0.4:6443/api/v1/persistentvolumeclaims?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:01.439887       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://172.18.0.4:6443/api/v1/services?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:02.669848       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: Get "https://172.18.0.4:6443/api/v1/replicationcontrollers?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:02.930487       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/csinodes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.023884       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: Get "https://172.18.0.4:6443/api/v1/nodes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.125654       1 reflector.go:138] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: Get "https://172.18.0.4:6443/api/v1/namespaces/kube-system/configmaps?fieldSelector=metadata.name%3Dextension-apiserver-authentication&limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.226742       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: Get "https://172.18.0.4:6443/apis/policy/v1/poddisruptionbudgets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.239623       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/storageclasses?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.394569       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: Get "https://172.18.0.4:6443/api/v1/persistentvolumeclaims?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.415356       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: Get "https://172.18.0.4:6443/api/v1/persistentvolumes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.436116       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1beta1.CSIStorageCapacity: failed to list *v1beta1.CSIStorageCapacity: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1beta1/csistoragecapacities?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.485543       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: Get "https://172.18.0.4:6443/apis/apps/v1/statefulsets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.503091       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/csidrivers?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.775582       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: Get "https://172.18.0.4:6443/apis/apps/v1/replicasets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:03.901542       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: Get "https://172.18.0.4:6443/api/v1/pods?fieldSelector=status.phase%21%3DSucceeded%2Cstatus.phase%21%3DFailed&limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:04.093476       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://172.18.0.4:6443/api/v1/services?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:06.491655       1 reflector.go:138] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: Get "https://172.18.0.4:6443/api/v1/namespaces/kube-system/configmaps?fieldSelector=metadata.name%3Dextension-apiserver-authentication&limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:06.650658       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1beta1.CSIStorageCapacity: failed to list *v1beta1.CSIStorageCapacity: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1beta1/csistoragecapacities?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:07.159065       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: Get "https://172.18.0.4:6443/api/v1/replicationcontrollers?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:07.384024       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://172.18.0.4:6443/api/v1/services?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:07.471548       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/csinodes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:07.519717       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: Get "https://172.18.0.4:6443/api/v1/nodes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:07.590635       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: Get "https://172.18.0.4:6443/api/v1/persistentvolumes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:07.724620       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: Get "https://172.18.0.4:6443/apis/policy/v1/poddisruptionbudgets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:07.742850       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/storageclasses?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:08.648046       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: Get "https://172.18.0.4:6443/api/v1/persistentvolumeclaims?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:08.660115       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: Get "https://172.18.0.4:6443/apis/apps/v1/statefulsets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:09.113016       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: Get "https://172.18.0.4:6443/api/v1/pods?fieldSelector=status.phase%21%3DSucceeded%2Cstatus.phase%21%3DFailed&limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:09.446116       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/csidrivers?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:10.020439       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: Get "https://172.18.0.4:6443/apis/apps/v1/replicasets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:13.465712       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1beta1.CSIStorageCapacity: failed to list *v1beta1.CSIStorageCapacity: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1beta1/csistoragecapacities?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:14.456199       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: Get "https://172.18.0.4:6443/api/v1/persistentvolumes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:14.501565       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: Get "https://172.18.0.4:6443/api/v1/replicationcontrollers?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:14.640935       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/storageclasses?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:15.195314       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://172.18.0.4:6443/api/v1/services?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:15.729211       1 reflector.go:138] k8s.io/apiserver/pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: Get "https://172.18.0.4:6443/api/v1/namespaces/kube-system/configmaps?fieldSelector=metadata.name%3Dextension-apiserver-authentication&limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:16.153706       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: Get "https://172.18.0.4:6443/api/v1/pods?fieldSelector=status.phase%21%3DSucceeded%2Cstatus.phase%21%3DFailed&limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:16.728444       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/csidrivers?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:17.092276       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: Get "https://172.18.0.4:6443/api/v1/nodes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:17.361432       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: Get "https://172.18.0.4:6443/apis/apps/v1/statefulsets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:18.020667       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: Get "https://172.18.0.4:6443/apis/policy/v1/poddisruptionbudgets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:18.291642       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: Get "https://172.18.0.4:6443/apis/apps/v1/replicasets?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:20.112074       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: Get "https://172.18.0.4:6443/apis/storage.k8s.io/v1/csinodes?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
E0828 19:56:20.124117       1 reflector.go:138] k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: Get "https://172.18.0.4:6443/api/v1/persistentvolumeclaims?limit=500&resourceVersion=0": dial tcp 172.18.0.4:6443: connect: connection refused
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-mkth-k8s-control-plane ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": [
        {
            "metadata": {
                "name": "goserver-69fdc5dd7-ggdnj.169f8e0da2464687",
                "namespace": "default",
                "uid": "fe43967a-570a-4bbb-aa9e-fed9941bd0ec",
                "resourceVersion": "572438",
                "creationTimestamp": "2021-08-28T19:09:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "goserver-69fdc5dd7-ggdnj",
                "uid": "81311294-0a71-4d07-8cfc-213eb8249367",
                "apiVersion": "v1",
                "resourceVersion": "480934",
                "fieldPath": "spec.containers{goserver}"
            },
            "reason": "Killing",
            "message": "Stopping container goserver",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker3"
            },
            "firstTimestamp": "2021-08-28T19:09:39Z",
            "lastTimestamp": "2021-08-28T19:09:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-control-plane.169f9092a28b7382",
                "namespace": "default",
                "uid": "f1abefab-9c5d-4521-aeb2-228826c809b9",
                "resourceVersion": "575180",
                "creationTimestamp": "2021-08-28T19:55:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-control-plane",
                "uid": "mkth-k8s-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:49Z",
            "lastTimestamp": "2021-08-28T19:55:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-control-plane.169f9092a4465c09",
                "namespace": "default",
                "uid": "2dba7c46-fe9c-45c4-8bd7-180bf903f96a",
                "resourceVersion": "575203",
                "creationTimestamp": "2021-08-28T19:55:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-control-plane",
                "uid": "mkth-k8s-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node mkth-k8s-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:49Z",
            "lastTimestamp": "2021-08-28T19:55:49Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-control-plane.169f9092a4467c3e",
                "namespace": "default",
                "uid": "8d2cad94-0c0b-43ef-871d-2a8f54eed73a",
                "resourceVersion": "575204",
                "creationTimestamp": "2021-08-28T19:55:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-control-plane",
                "uid": "mkth-k8s-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node mkth-k8s-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:49Z",
            "lastTimestamp": "2021-08-28T19:55:49Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-control-plane.169f9092a446896c",
                "namespace": "default",
                "uid": "906553db-e6ac-4c71-8687-4f49a43f8293",
                "resourceVersion": "575202",
                "creationTimestamp": "2021-08-28T19:55:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-control-plane",
                "uid": "mkth-k8s-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node mkth-k8s-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:49Z",
            "lastTimestamp": "2021-08-28T19:55:49Z",
            "count": 7,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-control-plane.169f9092a6d97445",
                "namespace": "default",
                "uid": "64b683e9-aef1-4837-acb6-0f8d05f0dcac",
                "resourceVersion": "575184",
                "creationTimestamp": "2021-08-28T19:55:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-control-plane",
                "uid": "mkth-k8s-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:55:49Z",
            "lastTimestamp": "2021-08-28T19:55:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-control-plane.169f9095df67219e",
                "namespace": "default",
                "uid": "ae1a19c2-cf9d-4af2-b715-c7efcd23c6f1",
                "resourceVersion": "575220",
                "creationTimestamp": "2021-08-28T19:56:03Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-control-plane",
                "uid": "mkth-k8s-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kube-proxy.",
            "source": {
                "component": "kube-proxy",
                "host": "mkth-k8s-control-plane"
            },
            "firstTimestamp": "2021-08-28T19:56:03Z",
            "lastTimestamp": "2021-08-28T19:56:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-worker2.169f909800a93d6a",
                "namespace": "default",
                "uid": "af4a0c6e-4b35-4d22-bd83-307de3b66e5d",
                "resourceVersion": "575271",
                "creationTimestamp": "2021-08-28T19:56:12Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-worker2",
                "uid": "mkth-k8s-worker2"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:12Z",
            "lastTimestamp": "2021-08-28T19:56:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-worker2.169f909807271b76",
                "namespace": "default",
                "uid": "f8431095-0580-4698-9e2f-d724b400b6c4",
                "resourceVersion": "575273",
                "creationTimestamp": "2021-08-28T19:56:12Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-worker2",
                "uid": "mkth-k8s-worker2"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:12Z",
            "lastTimestamp": "2021-08-28T19:56:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-worker2.169f9098075f6241",
                "namespace": "default",
                "uid": "ff194cd1-1461-4410-b3cd-6908b8f27770",
                "resourceVersion": "575274",
                "creationTimestamp": "2021-08-28T19:56:12Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-worker2",
                "uid": "mkth-k8s-worker2"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node mkth-k8s-worker2 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:12Z",
            "lastTimestamp": "2021-08-28T19:56:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-worker2.169f9098075fc33e",
                "namespace": "default",
                "uid": "f7c7400b-9313-46aa-b055-dcec7a7f11f6",
                "resourceVersion": "575275",
                "creationTimestamp": "2021-08-28T19:56:12Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-worker2",
                "uid": "mkth-k8s-worker2"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node mkth-k8s-worker2 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:12Z",
            "lastTimestamp": "2021-08-28T19:56:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-worker2.169f90980760041d",
                "namespace": "default",
                "uid": "c145d399-b58f-4ce8-a019-3a6a3f78f435",
                "resourceVersion": "575276",
                "creationTimestamp": "2021-08-28T19:56:12Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-worker2",
                "uid": "mkth-k8s-worker2"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node mkth-k8s-worker2 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:12Z",
            "lastTimestamp": "2021-08-28T19:56:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "mkth-k8s-worker2.169f90985d806bcb",
                "namespace": "default",
                "uid": "768b1c37-74e1-4d40-9ae7-2207e79efc5c",
                "resourceVersion": "575287",
                "creationTimestamp": "2021-08-28T19:56:14Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "mkth-k8s-worker2",
                "uid": "mkth-k8s-worker2"
            },
            "reason": "Starting",
            "message": "Starting kube-proxy.",
            "source": {
                "component": "kube-proxy",
                "host": "mkth-k8s-worker2"
            },
            "firstTimestamp": "2021-08-28T19:56:14Z",
            "lastTimestamp": "2021-08-28T19:56:14Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "a77d04e1-dc96-40f9-ac6d-485dc0d6695c",
                "resourceVersion": "204",
                "creationTimestamp": "2021-08-18T01:07:23Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "575295"
    },
    "items": []
}
